# QUANTAXIS 2.1.0 Core Service Deployment
#
# 作者: @yutiansut @quantaxis
# 版本: 2.1.0-alpha2

---
# QUANTAXIS Service
apiVersion: v1
kind: Service
metadata:
  name: quantaxis-service
  namespace: quantaxis
  labels:
    app: quantaxis
spec:
  type: LoadBalancer
  ports:
    - port: 8888
      targetPort: 8888
      protocol: TCP
      name: jupyter
    - port: 8010
      targetPort: 8010
      protocol: TCP
      name: webserver
  selector:
    app: quantaxis

---
# QUANTAXIS Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quantaxis
  namespace: quantaxis
  labels:
    app: quantaxis
    version: "2.1.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: quantaxis
  template:
    metadata:
      labels:
        app: quantaxis
        version: "2.1.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8010"
        prometheus.io/path: "/metrics"
    spec:
      # 亲和性配置
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - quantaxis
                topologyKey: kubernetes.io/hostname

      # 初始化容器
      initContainers:
        - name: wait-for-mongodb
          image: busybox:latest
          command:
            - sh
            - -c
            - |
              until nc -z mongodb-service 27017; do
                echo "等待MongoDB就绪..."
                sleep 2
              done

        - name: wait-for-rabbitmq
          image: busybox:latest
          command:
            - sh
            - -c
            - |
              until nc -z rabbitmq-service 5672; do
                echo "等待RabbitMQ就绪..."
                sleep 2
              done

      # 主容器
      containers:
        - name: quantaxis
          image: quantaxis/quantaxis:2.1.0-alpha2
          imagePullPolicy: IfNotPresent

          # 端口
          ports:
            - containerPort: 8888
              name: jupyter
              protocol: TCP
            - containerPort: 8010
              name: webserver
              protocol: TCP

          # 环境变量 - 从ConfigMap
          envFrom:
            - configMapRef:
                name: quantaxis-config

          # 环境变量 - 从Secret
          env:
            - name: MONGODB_USER
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_USER

            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: MONGO_PASSWORD

            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_USER

            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_PASSWORD

            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secret
                  key: REDIS_PASSWORD

          # 数据卷挂载
          volumeMounts:
            - name: quantaxis-code
              mountPath: /home/quantaxis

            - name: quantaxis-logs
              mountPath: /var/log/quantaxis

          # 健康检查
          livenessProbe:
            exec:
              command:
                - python
                - -c
                - "import QUANTAXIS; print('OK')"
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /health
              port: 8010
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3

          # 资源限制
          resources:
            requests:
              cpu: "1"
              memory: "2Gi"
            limits:
              cpu: "4"
              memory: "8Gi"

      # 数据卷
      volumes:
        - name: quantaxis-code
          persistentVolumeClaim:
            claimName: quantaxis-code-pvc

        - name: quantaxis-logs
          persistentVolumeClaim:
            claimName: quantaxis-logs-pvc

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: quantaxis-hpa
  namespace: quantaxis
  labels:
    app: quantaxis
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: quantaxis
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15
        - type: Pods
          value: 2
          periodSeconds: 15
      selectPolicy: Max

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: quantaxis-pdb
  namespace: quantaxis
  labels:
    app: quantaxis
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: quantaxis
